.modal-header
  h3.modal-title #{t('authentication.authentication')}
  button.close(type='button', data-dismiss='modal', aria-hidden='true') &times;
.modal-body
  .row
    .col-12
      p #{t('authentication.authentication_text')}
      if (loginChoice.oidc || loginChoice.gh || loginChoice.se || loginChoice.provider)
        p.alert-success #{t('authentication.authentication_text_green')}
  .row
    .col-md-4
      a.btn.btn-block(class=(loginChoice.oidc ? 'btn-success' : 'btn-light'), href='/auth/openidconnect?returnTo=' + encodeURIComponent(returnUrl))
        img(src='/img/googleplus.ico', alt='google', width='16', height='16')
        | &nbsp;Google
    .col-md-4
      a.btn.btn-block(class=(loginChoice.gh ? 'btn-success' : 'btn-light'), href='/auth/github?returnTo=' + encodeURIComponent(returnUrl))
        img(src='/img/github.ico', alt='github', width='16', height='16')
        | &nbsp;Github
    .col-md-4
      a.btn.btn-block(class=(loginChoice.se ? 'btn-success' : 'btn-light'), href='/auth/openid?openid_identifier=' + encodeURIComponent('https://openid.stackexchange.com') + '&returnTo=' + encodeURIComponent(returnUrl))
        img(src='/img/stackexchange.ico', alt='stackexchange', width='16', height='16')
        | &nbsp;StackExchange
  .row
    .col-12
      p &nbsp;
      form#passwordform(action='/auth/login?returnTo=' + encodeURIComponent(returnUrl), method='post')
        input(type='hidden', name='_csrf', value=csrf_token)
        .card.mb-2
          h5.card-header.p-2(class=(loginChoice.userPass ? 'alert-success' : 'bg-light'))
            a.inherit-color(href='#userPass', data-toggle='collapse') #{t('authentication.user_pass')}:
          #userPass.collapse(class=(loginChoice.userPass ? 'show' : ''))
            ul#passwordTab(class='nav nav-tabs', role='tablist')
              li(class='nav-item')
                a#sign-in(class='nav-link active', data-toggle='tab', href='#sign-in-contents', role='tab')
                  | Einloggen
              li(class='nav-item')
                a#sign-up(class='nav-link active', data-toggle='tab', href='#sign-up-contents', role='tab')
                  | Neu anmelden
              li(class='nav-item')
                a#add-to-existing(class='nav-link active', data-toggle='tab', href='#add-to-existing-contents', role='tab')
                  | Passwort zuf端gen

            div#passwordTabContents(class='tab-content')
              div#sign-in-contents(class='tab-pane fade show active', role='tabpanel')
                | Zum Einloggen gib Deine hinterlegte E-Mail-Adresse und Dein Passwort ein:
                .row
                  .col-6
                    label.control-label(for='sign-in-email') #{t('members.email')}:
                    input#sign-in-email.form-control.trim-text(type='email', name='email', value='', placeholder='myaddress@example.com')
                  .col-6
                    .form-group
                      label.control-label(for='sign-in-password') #{t('authentication.password')}:
                      input#sign-in-password.form-control.trim-text(type='password', name='password', value='')
                .row
                  .col-12
                    .btn-group.float-right
                      button.btn.btn-primary(type='submit') #{t('Einloggen')}

              div#sign-up-contents(class='tab-pane fade', role='tabpanel')
                | Um Dich als neues Mitglied zu registireren, gib die zu verwendende E-Mail-Adresse sowie Dein gew端nschtes Passwort ein:
                .row
                  .col-6
                    label.control-label(for='sign-up-email') #{t('members.email')}:
                    input#sign-up-email.form-control.trim-text(type='email', name='email', value='', placeholder='myaddress@example.com')
                  .col-6
                    .form-group
                      label.control-label(for='sign-up-password') #{t('authentication.password')}:
                      input#sign-up-password.form-control.trim-text(type='password', name='password', value='')
                .row
                  .col-12
                    .btn-group.float-right
                      button.btn.btn-primary(type='submit') #{t('Anmelden')}

              div#add-to-existing-contents(class='tab-pane fade', role='tabpanel')
                | Um ein Passwort zu setzen, melde Dich zuerst mit Deiner bisherigen Authentifizierungsmethode an
                | und f端ge dann 端ber die 'Profil bearbeiten' Seite ein Passwort hinzu (ganz unten auf der Seite).

  .row
    .col-12
      form(action='/auth/openid', method='get')
        p &nbsp;
        input(type='hidden', name='returnTo', value=returnUrl)
        .card.mb-2
          h5.card-header.p-2(class=(loginChoice.provider ? 'alert-success' : 'bg-light'))
            a.inherit-color(href='#openIDinput', data-toggle='collapse') #{t('authentication.alternative_url')}:
          #openIDinput.collapse(class=(loginChoice.provider ? 'show' : ''))
            .input-group
              input.form-control#openid_identifier(type='text', name='openid_identifier', value=(loginChoice.provider ? loginChoice.provider : ''))
              .input-group-append
                button.btn(class=(loginChoice.provider ? 'btn-success' : 'btn-light'), type='submit') #{t('authentication.authenticate')}
  .row
    .col-12
      form(action='/auth/magiclinkmail', method='get')
        p &nbsp;
        .card.mb-2
          h5.card-header.p-2
            a.inherit-color(href='#magicLinkInput', data-toggle='collapse') #{t('authentication.magic_link')}:
          #magicLinkInput.collapse(class=('btn-default'))
            .input-group
              input.form-control#magicLinkEmail(type='email', name='magic_link_email', value='', placeholder='myaddress@example.com')
              .input-group-append
                button.btn.btn-light(type='submit') #{t('authentication.magic_link_request')}

script.
  $(document).ready(function () {
    user_validator = $('#passwordform').validate({
      rules: {
        email: {required: true, email: true},
        password: {
          required: true,
          minlength: 5
        }
      },
      errorPlacement: function (error, element) { error.insertAfter(element); },
      errorElement: 'span',
      errorClass: 'help-block text-danger',
      highlight: function (element) { $(element).addClass('is-invalid'); },
      unhighlight: function (element) { $(element).removeClass('is-invalid'); }
    });

    user_validator.form();

    function handler(each) {
      return function () {
        user_validator.element(each);
      };
    }

    ['#passwordform [name=email]', '#passwordform [name=password]'].forEach(
      function (each) {
        $(each).change(handler(each));
        $(each).keyup(handler(each));
      }
    );
    user_validator.form();
  });
